def read_file(filename, line_number):
    try:
        with open(filename, 'r') as file:
            lines = file.readlines()
            if line_number <= 0 or line_number > len(lines):
                raise IndexError("–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏")
            line = lines[line_number - 1].strip()
            return line
    except FileNotFoundError:
        raise FileNotFoundError("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except IndexError as e:
        raise IndexError("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞") from e


def append_to_file(filename, line_number, content_to_append):
    try:
        with open(filename, 'r') as file:
            lines = file.readlines()

        if not content_to_append.strip():
            raise ValueError("–°—Ç—Ä–æ–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—É—Å—Ç–∞—è")

        if line_number <= 0:
            raise IndexError("–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏")

        # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –±–æ–ª—å—à–µ, —á–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ + 1, —Ç–æ –¥–æ–±–∞–≤–∏–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–æ –Ω—É–∂–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
        while line_number > len(lines) + 1:
            lines.append("\n")

        lines.insert(line_number - 1, content_to_append + "\n")

        with open(filename, 'w') as file:
            file.writelines(lines)

    except FileNotFoundError:
        raise FileNotFoundError("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except ValueError as e:
        raise ValueError("–°—Ç—Ä–æ–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—É—Å—Ç–∞—è") from e
    except IndexError as e:
        raise IndexError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–∞–π–ª–µ") from e
    except Exception as e:
        raise Exception("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞") from e



def file_action(action_type, filename, line_number=None, content_to_append=None):
    if action_type == "–ü—Ä–æ—á–∏—Ç–∞—Ç—å":
        if line_number is None:
            raise ValueError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è")
        return read_file(filename, line_number)
    elif action_type == "–î–æ–ø–æ–ª–Ω–∏—Ç—å":
        if line_number is None or content_to_append is None:
            raise ValueError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è")
        append_to_file(filename, line_number, content_to_append)
    else:
        raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è. –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å' –∏ '–î–æ–ø–æ–ª–Ω–∏—Ç—å'")


def button_start():
    from telebot import types
    keyboard = types.InlineKeyboardMarkup()

    # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–Ω–æ–ø–æ–∫
    balance = types.InlineKeyboardButton(text='üí∞ –ë–∞–ª–∞–Ω—Å', callback_data='balance')
    version = types.InlineKeyboardButton(text='üåü –í–µ—Ä—Å–∏—è', callback_data='version')
    keyboard.row(balance, version)

    # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–Ω–æ–ø–æ–∫
    get_client = types.InlineKeyboardButton(text='üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤', callback_data='get_client')
    keyboard.row(get_client)

    # –ß–µ—Ç–≤–µ—Ä—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–Ω–æ–ø–æ–∫
    my_task = types.InlineKeyboardButton(text='üìù –ó–∞–¥–∞–Ω–∏—è', callback_data='my_task')
    send_log = types.InlineKeyboardButton(text='üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥', callback_data='send_log')
    keyboard.row(my_task, send_log)

    # –ü—è—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–Ω–æ–ø–æ–∫
    speedtest = types.InlineKeyboardButton(text='üåê –°–∫–æ—Ä–æ—Å—Ç—å', callback_data='speedtest')
    ping = types.InlineKeyboardButton(text='üèì –ü–∏–Ω–≥', callback_data='ping')
    keyboard.row(speedtest, ping)

    change_token = types.InlineKeyboardButton(text='üîë –ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞', callback_data='change_token_telegram')
    add_task = types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ', callback_data='add_task')
    keyboard.row(add_task, change_token)

    clear_log = types.InlineKeyboardButton(text='üóë –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥', callback_data='clear_log')
    add_id = types.InlineKeyboardButton(text='–í–≤–µ—Å—Ç–∏ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.', callback_data='ID_Telegram')
    keyboard.row(clear_log, add_id)
    change = types.InlineKeyboardButton(text='üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω ytmonster', callback_data='change_token_ytmonster')
    keyboard.row(change)
    return keyboard